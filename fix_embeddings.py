#!/usr/bin/env python3
"""
Script de Corre√ß√£o: Limpa ChromaDB e reconstr√≥i embeddings.

PROBLEMA RESOLVIDO:
- OpenRouter N√ÉO suporta API de embeddings
- Erro: 'str' object has no attribute 'data'
- Erro: 401 - User not found

SOLU√á√ÉO:
- Migrado para sentence-transformers (modelo local)
- Dimens√µes mudaram: 1536 ‚Üí 384
- Este script limpa os dados antigos e reconstr√≥i
"""

import shutil
from pathlib import Path
import sys

# Adiciona o diret√≥rio raiz ao path
sys.path.insert(0, str(Path(__file__).parent))

from app.core.database import get_session
from app.services.rag_service import index_product_catalog

# Diret√≥rio do ChromaDB
CHROMA_DIR = Path(__file__).parent / "data" / "chroma"


def main():
    print("=" * 80)
    print("üîß CORRE√á√ÉO DE EMBEDDINGS - Migra√ß√£o para Sentence-Transformers")
    print("=" * 80)
    print()
    
    # 1. Remove dados antigos do ChromaDB
    if CHROMA_DIR.exists():
        print(f"üìÅ Removendo ChromaDB antigo: {CHROMA_DIR}")
        try:
            shutil.rmtree(CHROMA_DIR)
            print("‚úÖ ChromaDB antigo removido com sucesso!")
        except Exception as e:
            print(f"‚ö†Ô∏è  Erro ao remover: {e}")
            print("   Continuando mesmo assim...")
    else:
        print(f"‚ÑπÔ∏è  ChromaDB n√£o existe ainda: {CHROMA_DIR}")
    
    print()
    
    # 2. Recria diret√≥rio
    CHROMA_DIR.mkdir(parents=True, exist_ok=True)
    print(f"‚úÖ Diret√≥rio recriado: {CHROMA_DIR}")
    print()
    
    # 3. Reconstr√≥i √≠ndice de produtos
    print("üì¶ Reconstruindo √≠ndice de produtos...")
    try:
        with get_session() as session:
            index_product_catalog(session)
        print("‚úÖ √çndice de produtos reconstru√≠do com sucesso!")
    except Exception as e:
        print(f"‚ö†Ô∏è  Erro ao reconstruir √≠ndice: {e}")
        print("   Verifique se o banco de dados est√° acess√≠vel")
    
    print()
    print("=" * 80)
    print("‚úÖ CORRE√á√ÉO CONCLU√çDA!")
    print("=" * 80)
    print()
    print("PR√ìXIMOS PASSOS:")
    print("1. Reinicie o container Docker:")
    print("   docker-compose restart api")
    print()
    print("2. Teste o chat novamente")
    print()
    print("MUDAN√áAS APLICADAS:")
    print("‚úÖ OpenAI Embeddings ‚Üí Sentence-Transformers (local)")
    print("‚úÖ Dimens√µes: 1536 ‚Üí 384")
    print("‚úÖ Sem custo de API para embeddings")
    print("‚úÖ Funciona offline")
    print()


if __name__ == "__main__":
    main()
